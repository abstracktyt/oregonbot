const { MessageEmbed } = require('discord.js');
const { QueryType } = require('discord-player');

module.exports = {
    name: 'search',
    aliases: ['sh'],
    utilisation: '{prefix}search [song name]',
    voiceChannel: true,

    async execute(client, message, args) {
        if (!args[0]) return message.channel.send(`–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ ${message.author}... –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø—è—Ç—å ? ‚ùå`);

        const res = await player.search(args.join(' '), {
            requestedBy: message.member,
            searchEngine: QueryType.AUTO
        });

        if (!res || !res.tracks.length) return message.channel.send(`–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –Ω–∞ –∑–∞–ø—Ä–æ—Å ${message.author}... –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø—è—Ç—å ? ‚ùå`);

        const queue = await player.createQueue(message.guild, {
            metadata: message.channel
        });

        const embed = new MessageEmbed();

        embed.setColor('RED');
        embed.setAuthor(`Results for ${args.join(' ')}`, client.user.displayAvatarURL({ size: 1024, dynamic: true }));

        const maxTracks = res.tracks.slice(0, 10);

        embed.setDescription(`${maxTracks.map((track, i) => `**${i + 1}**. ${track.title} | ${track.author}`).join('\n')}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–∂–¥—É **1** –∏ **${maxTracks.length}** –∏–ª–∏ **cancel** ‚¨áÔ∏è`);

        embed.setTimestamp();
        embed.setFooter('', message.author.avatarURL({ dynamic: true }));

        message.channel.send({ embeds: [embed] });

        const collector = message.channel.createMessageCollector({
            time: 15000,
            errors: ['time'],
            filter: m => m.author.id === message.author.id
        });

        collector.on('collect', async (query) => {
            if (query.content.toLowerCase() === 'cancel') return message.channel.send(`–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ ‚úÖ`) && collector.stop();

            const value = parseInt(query.content);

            if (!value || value <= 0 || value > maxTracks.length) return message.channel.send(`–ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–∂–¥—É **1** –∏ **${maxTracks.length}** –∏–ª–∏ **cancel**... –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø—è—Ç—å ? ‚ùå`);

            collector.stop();

            try {
                if (!queue.connection) await queue.connect(message.member.voice.channel);
            } catch {
                await player.deleteQueue(message.guild.id);
                return message.channel.send(`–Ø –Ω–µ –º–æ–≥—É –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏—Ç—å—Å—è –≤ –¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª ${message.author}... –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø—è—Ç—å ? ‚ùå`);
            }

            await message.channel.send(`–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à –ø–æ–∏—Å–∫... üéß`);

            queue.addTrack(res.tracks[query.content - 1]);

            if (!queue.playing) await queue.play();
        });

        collector.on('end', (msg, reason) => {
            if (reason === 'time') return message.channel.send(`–í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤—ã—à–ª–æ ${message.author}... –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø—è—Ç—å ? ‚ùå`);
        });
    },
};